utf8()
{
    iconv -f ISO-8859-1 -t UTF-8 $1 > $1.tmp
    rm $1
    mv $1.tmp $1
}

function .. (){
  local arg=${1:-1};
  local dir=""
  while [ $arg -gt 0 ]; do
dir="../$dir"
    arg=$(($arg - 1));
  done
cd $dir #>&/dev/null
}

function go (){
  if [ $# == "0" ] || [ $1 == "-h" ]
  then
    echo "Usage: go [(number)] [-l] [-a (path)] [-r (number)] [-h]"
    echo "    (number): cd to stored path with number"
    echo "    -l: list stored bookmarks"
    echo "    -a: store new path to navigate"
    echo "    -s: save current location as bookmark"
    echo "    -r: remove bookmark at given number"
    echo "    -h: show this help"
  elif [ $1 == "-a" ]
  then
    echo $2 >> $HOME/.go_history
    echo `wc -l < $HOME//.go_history`
  elif [ $1 == '-s'  ]
  then
    echo `pwd` >> $HOME/.go_history
    echo `wc -l < $HOME//.go_history`
  elif [ $1 == "-l" ]
  then
    mygofile="$HOME/.go_history"
    i=1
    while read line
    do
      echo $i":"$line
      i=`expr $i + 1`
    done <"$mygofile"
  elif [ $1 == "-r" ]
  then
    sed -i $2'd' $HOME/.go_history
  elif [ $1 == "0" ]
  then
    :
  else
    i=1
    mygofile="$HOME/.go_history"
    while read line
     do
       lines[$i]="$line"
       i=`expr $i + 1`
     done <"$mygofile"
     cd ${lines[$1]}
  fi
}

fn() {
    if test "$#" = 2; then
        find . -iname $1 | head -n $2 | tail -n 1
    elif test "$#" = 1;
    then
        find . -iname $1 | head -n 1
    else
        find . | head -n 1
    fi
}

d() {
    if test "$#" = 1; then
        dia --export `basename -s .dia $1`.png $1 -t png-libart
    else
        echo "  Expected 1 arg (filename), got $#."
    fi
}

ht() {
    echo "tmux list-sessions, tmux attach -t name, tmux kill-session -t name, tmux source-file ~/.tmux.conf"
}

hf() {
    echo "psql -h localhost hpcdual-zustellserver  moauser"
    echo "nc -vz 127.0.0.1 80"
    echo 'wget "https://webservices.llv.li:9443/persw/services/mitarbeitereZDService/v1" --certificate=llv-test.pem'
    echo "netstat -lntu"
    echo "ssh -L 9443:localhost:9443 moabox"
}

notIn(){
    if test "$#" = 2; then
        grep -x -f $2 -v $1
    else
        echo "  Expected 2 arg (reference file, file to look into), got $#."
    fi

}

h() {
    echo "Custom Commands:"
    echo "  .. n            ->  go up 1 or n directories"
    echo "  go {n}          ->  go to bookmarked location n"
    echo "  fn {expr} n     ->  like 'f', but return only the n-th result (default: 1st)"
    echo "  d {file}        ->  export given .dia file to png"
    echo "  ma              ->  show (m)y (a)liases, mostly short-hands of common commands"
    echo "  ht              ->  show tmux (un)common commands"
    echo "  hf              ->  show some commands I never quite remember the ordering"
    echo "  notIn file otherFile
                  ->  find lines given by 'file' not in 'otherFile'"
}
